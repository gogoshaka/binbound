version: '3.8'

services:
  postgresdb:
    image: postgres:17.4
    hostname: ${DATABASE_HOSTNAME}
    container_name: ${DATABASE_HOSTNAME}
    restart: always
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data 
    env_file:
      - ../.env
    ports:
      - '5432:5432'
    expose:
      - 5432
    networks:
      - database-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 2s
      retries: 20

  server:
    image: ${DOCKER_USERNAME}/binboundapp:${IMAGE_TAG}
    container_name: binboundapp
    ports:
      - '3000:3000'
    stdin_open: true
    tty: true  # Keeps the container running for debugging
    depends_on:
      postgresdb:
        condition: service_healthy
    env_file:
      - ../.env
    networks:
      - database-network
      - reverse-proxy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`${DEPLOYMENT_HOST}`)"
      - "traefik.http.routers.server.entrypoints=websecure"
      - "traefik.http.routers.server.tls.certresolver=myresolver"
      - "traefik.docker.network=reverse-proxy-network"


  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entryPoints.web.http.redirections.entrypoint.scheme=https
      #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=gauthier.lawny@outlook.fr"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"    # HTTP
      - "8080:8080"
      - "443:443"  # HTTPS
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "../letsencrypt:/letsencrypt" # For Let's Encrypt certificates
    labels:
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=auth"
    networks:
      - reverse-proxy-network

networks:
  database-network:
    driver: bridge
    name: database-network
  reverse-proxy-network:
    driver: bridge
    name: reverse-proxy-network